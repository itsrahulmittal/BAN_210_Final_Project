*------------------------------------------------------------*
User:                RAHUL AGARWAL
Date:                06 August 2022
Time:                19:44:43
Site:                70192439
Platform:            X64_8HOME
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "06 August 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19:44:39" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                06 August 2022
Time:                19:44:39
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2AYEFA6 "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2AYEFA6 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "06 August 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19:44:39" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                RAHUL AGARWAL";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70192439";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8HOME";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "06 August 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19:44:39" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                RAHUL AGARWAL";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
21330      proc freq data=EMWS1.Part_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Part_VariableSet noprint;
21331      table ROLE*LEVEL/out=WORK.PartMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.PartMETA;
21332      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.PART_VARIABLESET.
NOTE: The data set WORK.PARTMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
21333      proc print data=WORK.PartMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.PartMETA label noobs;
21334      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
21335      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
21336      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21337      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
21338      run;
 
NOTE: There were 3 observations read from the data set WORK.PARTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
21339      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Part: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1XDDAAT;
MPRINT(EM_DIAGRAM):   set WORK.M1XDDAAT;
MPRINT(EM_DIAGRAM):   where(PARTITIONROLE ne '' or ROLE='TARGET');
MPRINT(EM_DIAGRAM):   run;
21347      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21348      * Part: Determine number of observations;
MPRINT(EM_DIAGRAM):   * Part: Determine number of observations;
21349      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21350      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
21351      reset noprint;
MPRINT(EM_DIAGRAM):   reset noprint;
21352      select count(*) into :_tmpa from EMWS1.FIMPORT_train
21353      ;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpa from EMWS1.FIMPORT_train ;
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_DATA.
21354      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
trainPct=70 validatePct=30 testPct=0
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
21355      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21356      * Part: Retrieving stratification variable(s) levels;
MPRINT(EM_DIAGRAM):   * Part: Retrieving stratification variable(s) levels;
21357      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21358      proc freq data=EMWS1.FIMPORT_train noprint;
MPRINT(EM_DIAGRAM):   proc freq data=EMWS1.FIMPORT_train noprint;
21359      format
21360      Class $20.
21361      ;
MPRINT(EM_DIAGRAM):   format Class $20. ;
21362      table
21363      Class
21364      /out=WORK.Part_FREQ(drop=percent);
MPRINT(EM_DIAGRAM):   table Class /out=WORK.Part_FREQ(drop=percent);
21365      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: The data set WORK.PART_FREQ has 2 observations and 2 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
21366      proc sort data=WORK.Part_FREQ;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Part_FREQ;
21367      by descending count;
MPRINT(EM_DIAGRAM):   by descending count;
21368      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_FREQ.
NOTE: The data set WORK.PART_FREQ has 2 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   * Part: Retrieving levels that meet minimum requirement;
21369      * Part: Retrieving levels that meet minimum requirement;
21370      data WORK.Part_FREQ2(keep = count);
MPRINT(EM_DIAGRAM):   data WORK.Part_FREQ2(keep = count);
21371      set WORK.Part_FREQ;
MPRINT(EM_DIAGRAM):   set WORK.Part_FREQ;
21372      where (.01 * 70 * count) >= 3;
MPRINT(EM_DIAGRAM):   where (.01 * 70 * count) >= 3;
21373      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_FREQ.
      WHERE (0.7*count)>=3;
NOTE: The data set WORK.PART_FREQ2 has 2 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21374      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21375      * Part: Create stratified partitioning;
MPRINT(EM_DIAGRAM):   * Part: Create stratified partitioning;
21376      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21377      data
21378      EMWS1.Part_TRAIN(label="")
21379      EMWS1.Part_VALIDATE(label="")
21380      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Part_TRAIN(label="") EMWS1.PART_VALIDATE(label="") ;
21381      retain _seed_ 12345;
MPRINT(EM_DIAGRAM):   retain _seed_ 12345;
21382      drop _seed_ _genvalue_;
MPRINT(EM_DIAGRAM):   drop _seed_ _genvalue_;
21383      call ranuni(_seed_, _genvalue_);
MPRINT(EM_DIAGRAM):   call ranuni(_seed_, _genvalue_);
21384      label _dataobs_ = "%sysfunc(sasmsg(sashelp.dmine, sample_dataobs_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _dataobs_ = "Observation Number";
21385      _dataobs_ = _N_;
MPRINT(EM_DIAGRAM):   _dataobs_ = _N_;
21386      drop _c00:;
MPRINT(EM_DIAGRAM):   drop _c00:;
21387      set EMWS1.FIMPORT_train;
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_train;
21388      length _Pformat1 $70;
MPRINT(EM_DIAGRAM):   length _Pformat1 $70;
21389      drop _Pformat1;
MPRINT(EM_DIAGRAM):   drop _Pformat1;
21390      _Pformat1 = strip(put(Class, $20.));
MPRINT(EM_DIAGRAM):   _Pformat1 = strip(put(Class, $20.));
21391      if
21392      _Pformat1 = 'no-recurrence-events'
21393      then do;
MPRINT(EM_DIAGRAM):   if _Pformat1 = 'no-recurrence-events' then do;
21394      if (201+1-_C000003)*_genvalue_ <= (141 - _C000001) then do;
MPRINT(EM_DIAGRAM):   if (201+1-_C000003)*_genvalue_ <= (141 - _C000001) then do;
21395      _C000001 + 1;
MPRINT(EM_DIAGRAM):   _C000001 + 1;
21396      output EMWS1.Part_TRAIN;
MPRINT(EM_DIAGRAM):   output EMWS1.Part_TRAIN;
21397      end;
MPRINT(EM_DIAGRAM):   end;
21398      else do;
MPRINT(EM_DIAGRAM):   else do;
21399      _C000002 + 1;
MPRINT(EM_DIAGRAM):   _C000002 + 1;
21400      output EMWS1.Part_VALIDATE;
MPRINT(EM_DIAGRAM):   output EMWS1.Part_VALIDATE;
21401      end;
MPRINT(EM_DIAGRAM):   end;
21402      _C000003+1;
MPRINT(EM_DIAGRAM):   _C000003+1;
21403      end;
MPRINT(EM_DIAGRAM):   end;
21404      else if
21405      _Pformat1 = 'recurrence-events'
21406      then do;
MPRINT(EM_DIAGRAM):   else if _Pformat1 = 'recurrence-events' then do;
21407      if (85+1-_C000006)*_genvalue_ <= (60 - _C000004) then do;
MPRINT(EM_DIAGRAM):   if (85+1-_C000006)*_genvalue_ <= (60 - _C000004) then do;
21408      _C000004 + 1;
MPRINT(EM_DIAGRAM):   _C000004 + 1;
21409      output EMWS1.Part_TRAIN;
MPRINT(EM_DIAGRAM):   output EMWS1.Part_TRAIN;
21410      end;
MPRINT(EM_DIAGRAM):   end;
21411      else do;
MPRINT(EM_DIAGRAM):   else do;
21412      _C000005 + 1;
MPRINT(EM_DIAGRAM):   _C000005 + 1;
21413      output EMWS1.Part_VALIDATE;
MPRINT(EM_DIAGRAM):   output EMWS1.Part_VALIDATE;
21414      end;
MPRINT(EM_DIAGRAM):   end;
21415      _C000006+1;
MPRINT(EM_DIAGRAM):   _C000006+1;
21416      end;
MPRINT(EM_DIAGRAM):   end;
21417      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: The data set EMWS1.PART_TRAIN has 199 observations and 11 variables.
NOTE: The data set EMWS1.PART_VALIDATE has 87 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
21418      data _tempNobs;
MPRINT(EM_DIAGRAM):    data _tempNobs;
21419      length Type $8 Table $32 Nobs 8;
MPRINT(EM_DIAGRAM):   length Type $8 Table $32 Nobs 8;
21420      label type= "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,    NOQUOTE))" table = "%sysfunc(sasmsg(sashelp.dmine, meta_dataset_vlabel, NOQUOTE))" nobs = "%sysfunc(sasmsg(sashelp.dmine,  rpt_numObs_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label type= "Type" table = "Data Set" nobs = "Number of Observations";
21421      type='DATA';
MPRINT(EM_DIAGRAM):   type='DATA';
21422      table="EMWS1.FIMPORT_train";
MPRINT(EM_DIAGRAM):   table="EMWS1.FIMPORT_train";
21423      Nobs=286;
MPRINT(EM_DIAGRAM):   Nobs=286;
21424      output;
MPRINT(EM_DIAGRAM):   output;
21425      type='TRAIN';
MPRINT(EM_DIAGRAM):   type='TRAIN';
21426      table="EMWS1.Part_TRAIN";
MPRINT(EM_DIAGRAM):   table="EMWS1.Part_TRAIN";
21427      Nobs=199;
MPRINT(EM_DIAGRAM):   Nobs=199;
21428      output;
MPRINT(EM_DIAGRAM):   output;
21429      type='VALIDATE';
MPRINT(EM_DIAGRAM):   type='VALIDATE';
21430      table="EMWS1.Part_VALIDATE";
MPRINT(EM_DIAGRAM):   table="EMWS1.Part_VALIDATE";
21431      Nobs=87;
MPRINT(EM_DIAGRAM):   Nobs=87;
21432      output;
MPRINT(EM_DIAGRAM):   output;
21433      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._TEMPNOBS has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
21434      %let _cn = %sysfunc(getoption(CENTER));
21435      %let _nb = %sysfunc(getoption(NUMBER));
21436      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
21437      proc print data=_tempNobs noobs label;
MPRINT(EM_DIAGRAM):   proc print data=_tempNobs noobs label;
21438      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21439      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_partitionSummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Partition Summary";
MPRINT(EM_DIAGRAM):   run;
21440      run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPNOBS.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21441      title10;
MPRINT(EM_DIAGRAM):   title10;
21442      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):   run;
21443      run;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "06 August 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19:44:41" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                06 August 2022
Time:                19:44:41
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0K2DT1B "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0K2DT1B new;
MPRINT(EM_DIAGRAM):   run;
21545      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21546      * Part: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Part: Computing metadata for TRAIN data;
21547      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Part_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Part_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options fmterr;
MPRINT(EMADVISECOLUMNS):   data _metaTestView;
MPRINT(EMADVISECOLUMNS):   set EMWS1.Part_TRAIN;
MPRINT(EMADVISECOLUMNS):   if _N_=1 then do;
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   stop;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Part_TRAIN out=WORK.M1BBQJDF noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BBQJDF;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BBQJDF(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BBQJDF;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BBQJDF;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M102ENHP NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M102ENHP;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M102ENHP;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WM6P99(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M102ENHP;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M102ENHP;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M102ENHP;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M102ENHP;
MPRINT(EMADVISECOLUMNS):   set WORK.M102ENHP;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.FIMPORT_train noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.FIMPORT_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Part_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Part";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Part: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = '_DATAOBS_' then ROLE='ID';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "06 August 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19:44:42" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                06 August 2022
Time:                19:44:42
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1QT3MK4 "C:\Users\RAHUL AGARWAL\Desktop\new\Workspaces\EMWS1\Part\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1QT3MK4 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M1AEI3M0;
MPRINT(EM_DIAGRAM):   set WORK.M1AEI3M0;
MPRINT(EM_DIAGRAM):   where(ROLE = "TARGET" or ROLE = "FREQ");
MPRINT(EM_DIAGRAM):   run;
21921      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21922      * Part: Computing statistics for class target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for class target variables;
21923      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21924      ods listing close;
MPRINT(EM_DIAGRAM):   ods listing close;
21925      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
21926      proc freq data = EMWS1.FIMPORT_train order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.FIMPORT_train order=formatted addnames;
21927      table Class / missing;
MPRINT(EM_DIAGRAM):   table Class / missing;
21928      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: The data set WORK.TEMPFREQ has 2 observations and 8 variables.
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
21929      quit;
21930      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
21931      data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
21932      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
21933         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
21934      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
21935      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
21936      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
21937      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
21938      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
21939      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
21940      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
21941      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
21942      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
21943      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
21944      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
21945      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
21946      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
21947      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
21948      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
21949      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
21950      output;
MPRINT(EM_DIAGRAM):   output;
21951      end;
MPRINT(EM_DIAGRAM):   end;
21952      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
21953      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
21954      proc sort data=WORK.Part_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Part_BAR NOTHREADS;
21955      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
21956      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21957      proc sort data=WORK.M1AEI3M0;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1AEI3M0;
21958      by Name;
MPRINT(EM_DIAGRAM):   by Name;
21959      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M1AEI3M0.
NOTE: The data set WORK.M1AEI3M0 has 1 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21960      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Part_BAR;
21961      merge WORK.Part_BAR(in=_a) WORK.M1AEI3M0(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge WORK.Part_BAR(in=_a) WORK.M1AEI3M0(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
21962      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
21963      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
21964      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
21965      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
21966      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: There were 1 observations read from the data set WORK.M1AEI3M0.
NOTE: The data set WORK.PART_BAR has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21967      data EMWS1.Part_CLASS;
MPRINT(EM_DIAGRAM):    data EMWS1.Part_CLASS;
21968      length DATA $8;
MPRINT(EM_DIAGRAM):   length DATA $8;
21969      set WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Part_BAR;
21970      DATA = "DATA";
MPRINT(EM_DIAGRAM):   DATA = "DATA";
21971      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set EMWS1.PART_CLASS has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21972      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21973      * Part: Computing statistics for interval target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for interval target variables;
21974      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21975      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21976      * Part: Computing statistics for class target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for class target variables;
21977      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21978      ods listing close;
MPRINT(EM_DIAGRAM):   ods listing close;
21979      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
21980      proc freq data = EMWS1.Part_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Part_TRAIN order=formatted addnames;
21981      table Class / missing;
MPRINT(EM_DIAGRAM):   table Class / missing;
21982      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.TEMPFREQ has 2 observations and 8 variables.
NOTE: There were 199 observations read from the data set EMWS1.PART_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
21983      quit;
21984      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
21985      data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
21986      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
21987         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
21988      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
21989      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
21990      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
21991      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
21992      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
21993      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
21994      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
21995      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
21996      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
21997      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
21998      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
21999      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
22000      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
22001      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
22002      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
22003      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
22004      output;
MPRINT(EM_DIAGRAM):   output;
22005      end;
MPRINT(EM_DIAGRAM):   end;
22006      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
22007      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
22008      proc sort data=WORK.Part_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Part_BAR NOTHREADS;
22009      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
22010      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22011      proc sort data=WORK.M1AEI3M0;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1AEI3M0;
22012      by Name;
MPRINT(EM_DIAGRAM):   by Name;
22013      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22014      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Part_BAR;
22015      merge WORK.Part_BAR(in=_a) WORK.M1AEI3M0(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge WORK.Part_BAR(in=_a) WORK.M1AEI3M0(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
22016      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
22017      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
22018      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
22019      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
22020      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: There were 1 observations read from the data set WORK.M1AEI3M0.
NOTE: The data set WORK.PART_BAR has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22021      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR;
22022      length DATA $8;
MPRINT(EM_DIAGRAM):   length DATA $8;
22023      set WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Part_BAR;
22024      DATA = "TRAIN";
MPRINT(EM_DIAGRAM):   DATA = "TRAIN";
22025      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22026      data EMWS1.Part_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS1.Part_CLASS;
22027      set EMWS1.Part_CLASS WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_CLASS WORK.Part_BAR;
22028      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.PART_CLASS.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set EMWS1.PART_CLASS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22029      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22030      * Part: Computing statistics for interval target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for interval target variables;
22031      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22032      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22033      * Part: Computing statistics for class target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for class target variables;
22034      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22035      ods listing close;
MPRINT(EM_DIAGRAM):   ods listing close;
22036      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
22037      proc freq data = EMWS1.Part_VALIDATE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Part_VALIDATE order=formatted addnames;
22038      table Class / missing;
MPRINT(EM_DIAGRAM):   table Class / missing;
22039      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.TEMPFREQ has 2 observations and 8 variables.
NOTE: There were 87 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22040      quit;
22041      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
22042      data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
22043      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
22044         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
22045      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
22046      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
22047      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
22048      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
22049      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
22050      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
22051      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
22052      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
22053      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
22054      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
22055      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
22056      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
22057      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
22058      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
22059      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
22060      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
22061      output;
MPRINT(EM_DIAGRAM):   output;
22062      end;
MPRINT(EM_DIAGRAM):   end;
22063      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
22064      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
22065      proc sort data=WORK.Part_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Part_BAR NOTHREADS;
22066      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
22067      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22068      proc sort data=WORK.M1AEI3M0;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1AEI3M0;
22069      by Name;
MPRINT(EM_DIAGRAM):   by Name;
22070      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22071      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Part_BAR;
22072      merge WORK.Part_BAR(in=_a) WORK.M1AEI3M0(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge WORK.Part_BAR(in=_a) WORK.M1AEI3M0(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
22073      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
22074      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
22075      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
22076      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
22077      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: There were 1 observations read from the data set WORK.M1AEI3M0.
NOTE: The data set WORK.PART_BAR has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22078      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR;
22079      length DATA $8;
MPRINT(EM_DIAGRAM):   length DATA $8;
22080      set WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Part_BAR;
22081      DATA = "VALIDATE";
MPRINT(EM_DIAGRAM):   DATA = "VALIDATE";
22082      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22083      data EMWS1.Part_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS1.Part_CLASS;
22084      set EMWS1.Part_CLASS WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_CLASS WORK.Part_BAR;
22085      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.PART_CLASS.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set EMWS1.PART_CLASS has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22086      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22087      * Part: Computing statistics for interval target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for interval target variables;
22088      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22089      data EMWS1.Part_CLASS(rename=(_VARIABLE_=VARIABLE _X_=VALUE _XLABEL_=FORMATTEDVALUE));
MPRINT(EM_DIAGRAM):   data EMWS1.Part_CLASS(rename=(_VARIABLE_=VARIABLE _X_=VALUE _XLABEL_=FORMATTEDVALUE));
22090      label DATA = "%sysfunc(sasmsg(sashelp.dmine, rpt_data_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATA = "Data";
22091      set EMWS1.Part_CLASS;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_CLASS;
22092      drop type role;
MPRINT(EM_DIAGRAM):   drop type role;
22093      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.PART_CLASS.
NOTE: The data set EMWS1.PART_CLASS has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22094      proc sort data=EMWS1.Part_CLASS NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CLASS NOTHREADS;
22095      by DATA;
MPRINT(EM_DIAGRAM):   by DATA;
22096      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.PART_CLASS.
NOTE: The data set EMWS1.PART_CLASS has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22097      %let _cn = %sysfunc(getoption(CENTER));
22098      %let _nb = %sysfunc(getoption(NUMBER));
22099      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
22100      proc print data=EMWS1.Part_CLASS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Part_CLASS noobs label;
22101      by DATA;
MPRINT(EM_DIAGRAM):   by DATA;
22102      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22103      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classTargetStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Summary Statistics for Class Targets";
MPRINT(EM_DIAGRAM):   run;
22104      run;
 
NOTE: There were 6 observations read from the data set EMWS1.PART_CLASS.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22105      title10;
MPRINT(EM_DIAGRAM):   title10;
22106      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
